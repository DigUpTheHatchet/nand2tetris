// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */



 /**
  * Which sub-chip output to emit is determined by the two MSBs of the address. 
  * If 00 or 01 then RAM out, if 10 then Screen out, if 11 then KBD out
  */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // Routes the correct output from the various sub-chips, using the two MSBs of the address
    Mux4Way16(a=ramOut,b=ramOut,c=screenOut,d=keyboardOut,sel=address[13..14],out=out);
    
    // Decide which sub-chip to load (if any)
    // If load=0, then loadRam & loadScreen are both 0
    // If load=1 & MSB(address) = 0, then loadRam is 1
    // If load=1 & MSB(address) = 1, then loadScreen is 1  
    DMux(in=load,sel=address[14],a=loadRam,b=loadScreen);

    RAM16K(in=in,address=address[0..13],load=loadRam,out=ramOut);
    Screen(in=in,address=address[0..12],load=loadScreen,out=screenOut);
    Keyboard(out=keyboardOut);
}

